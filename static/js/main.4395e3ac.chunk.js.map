{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","oper","updateCalc","value","includes","slice","eval","toString","createDigits","digits","i","push","onClick","calculate","deleteLast","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6yBAGA,SAASA,MACP,cAAwBC,oDAAS,KAAjC,qJAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,KAArC,sJAAOG,OAAP,cAAeC,UAAf,cACMC,KAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAE5BC,WAAa,SAAbA,WAAcC,OAEfF,KAAKG,SAASD,QAAmB,MAATN,MACxBI,KAAKG,SAASD,QAAUF,KAAKG,SAASP,KAAKQ,OAAO,MAIrDP,QAAQD,KAAOM,OACVF,KAAKG,SAASD,QACjBH,UAAUM,KAAKT,KAAOM,OAAOI,cAI3BC,aAAe,WAEnB,IADA,IAAMC,EAAS,GADU,WAEhBC,GACPD,EAAOE,KACL,qEAAQC,QAAS,kBAAMV,WAAWQ,EAAEH,aAApC,SACGG,GADmDA,KAFjDA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAOT,OAAOD,GAEHI,UAAY,SAAZA,YACJf,QAAQQ,KAAKT,MAAMU,aAGfO,WAAa,WACjB,GAAY,KAARjB,KAAJ,CAGA,IAAMM,EAAQN,KAAKQ,MAAM,GAAI,GAC7BP,QAAQK,KAGV,OACE,kEAAKY,UAAU,MAAf,SACE,mEAAKA,UAAU,aAAf,UACE,mEAAKA,UAAU,UAAf,UACGhB,OAAS,kFAAQA,OAAR,OAA0B,IADtC,IAC4CF,MAAQ,OAEpD,mEAAKkB,UAAU,YAAf,UACE,qEAAQH,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eAEA,qEAAQU,QAASE,WAAjB,oBAEF,mEAAKC,UAAU,SAAf,UACGP,eACD,qEAAQI,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAAS,kBAAMV,WAAW,MAAlC,eACA,qEAAQU,QAASC,UAAjB,uBAOKlB,2B,gICzDAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChC,EAAA,EAAD,MAEFiC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4395e3ac.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [calc, setCalc] = useState(\" \");\n  const [result, setResult] = useState(\" \");\n  const oper = [\"/\", \"*\", \"+\", \"-\", \".\"];\n\n  const updateCalc = (value) => {\n    if (\n      (oper.includes(value) && calc === \" \") ||\n      (oper.includes(value) && oper.includes(calc.slice(-1)))\n    ) {\n      return;\n    }\n    setCalc(calc + value);\n    if (!oper.includes(value)) {\n      setResult(eval(calc + value).toString());\n    }\n  };\n\n  const createDigits = () => {\n    const digits = [];\n    for (let i = 1; i < 10; i++) {\n      digits.push(\n        <button onClick={() => updateCalc(i.toString())} key={i}>\n          {i}\n        </button>\n      );\n    }\n    return digits;\n  };\n  const calculate = () => {\n    setCalc(eval(calc).toString());\n  };\n\n  const deleteLast = () => {\n    if (calc == \" \") {\n      return;\n    }\n    const value = calc.slice(0, -1);\n    setCalc(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          {result ? <span>({result})</span> : \" \"} {calc || \"0\"}\n        </div>\n        <div className=\"operators\">\n          <button onClick={() => updateCalc(\"/\")}>/</button>\n          <button onClick={() => updateCalc(\"*\")}>*</button>\n          <button onClick={() => updateCalc(\"+\")}>+</button>\n          <button onClick={() => updateCalc(\"-\")}>-</button>\n\n          <button onClick={deleteLast}>DEL</button>\n        </div>\n        <div className=\"digits\">\n          {createDigits()}\n          <button onClick={() => updateCalc(\"0\")}>0</button>\n          <button onClick={() => updateCalc(\".\")}>.</button>\n          <button onClick={calculate}>=</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}